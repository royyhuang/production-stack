apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: kube-prom-stack
    app.kubernetes.io/component: ingress
  # annotations:
  #   # Enable SSL/TLS termination
  #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
  #   # Force HTTPS
  #   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  #   # Proxy settings for Grafana
  #   nginx.ingress.kubernetes.io/proxy-body-size: "0"
  #   nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
  #   nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  #   # CORS settings for Grafana
  #   nginx.ingress.kubernetes.io/enable-cors: "true"
  #   nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  #   nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
  #   nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
  #   # Set the subpath for Grafana
  #   nginx.ingress.kubernetes.io/configuration-snippet: |
  #     proxy_set_header X-Forwarded-Prefix /grafana;
spec:
  ingressClassName: nginx
  # TLS configuration (uncomment and configure if you have SSL certificates)
  # tls:
  # - hosts:
  #   - your-domain.com
  #   secretName: grafana-tls
  rules:
    - http:
        paths:
          - path: /grafana
            pathType: Prefix
            backend:
              service:
                name: kube-prom-stack-grafana
                port:
                  number: 80
---
# Optional: Basic auth secret for additional security
# Uncomment and create this secret if you want basic auth
# apiVersion: v1
# kind: Secret
# metadata:
#   name: grafana-basic-auth
#   namespace: monitoring
# type: Opaque
# data:
#   auth: <base64-encoded-htpasswd-file>
#
# To generate the auth data:
# htpasswd -nb admin your-password | base64
